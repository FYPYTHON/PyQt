假设有个方法，且这个方法在逻辑上采用类本身作为对象来调用更合理，那么这个方法就可以定义为类方法。
另外，如果需要继承，也可以定义为类方法。

如下场景：
假设我有一个学生类和一个班级类，想要实现的功能为：
    执行班级人数增加的操作、获得班级的总人数；
    学生类继承自班级类，每实例化一个学生，班级人数都能增加；
    最后，我想定义一些学生，获得班级中的总人数。
思考：这个问题用类方法做比较合适，为什么？
因为我实例化的是学生，但是如果我从学生这一个实例中获得班级总人数，在逻辑上显然是不合理的。
同时，如果想要获得班级总人数，如果生成一个班级的实例也是没有必要的。


静态方法是类中的函数，不需要实例。
静态方法主要是用来存放逻辑性的代码，逻辑上属于类，但是和类本身没有关系，
也就是说在静态方法中，不会涉及到类中的属性和方法的操作。
可以理解为，静态方法是个独立的、单纯的函数，它仅仅托管于某个类的名称空间中，便于使用和维护。

其实，我们也可以在类外面写一个同样的函数来做这些事，但是这样做就打乱了逻辑关系，也会导致以后代码维护困难。